
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.5"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0.1"
    }
}

apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'org.gradle.jacoco'
apply plugin: 'org.sonarqube'

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    testCompile gradleTestKit()
    testCompile "junit:junit:4.12"
    testCompile "xmlunit:xmlunit:1.6"
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

version = '0.10-SNAPSHOT'
group = 'com.github.rodm'

task pluginClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    testRuntime files(pluginClasspathManifest)
}

sourceSets {
    functionalTest {
        compileClasspath += main.output + configurations.testRuntime
        runtimeClasspath += main.output + configurations.testRuntime
        groovy {
            srcDir 'src/functional/groovy'
        }
    }
}

task functionalTest(type: Test) {
    testClassesDir = sourceSets.functionalTest.output.classesDir
    classpath = sourceSets.functionalTest.runtimeClasspath
}

publishing {
    repositories {
        mavenLocal()
    }

    publications {
        plugin(MavenPublication) {
            from components.java
        }
    }
}

pluginBundle {
    website = 'https://github.com/rodm/gradle-teamcity-plugin'
    vcsUrl = 'https://github.com/rodm/gradle-teamcity-plugin'
    description = 'Gradle plugin to support the development of TeamCity plugins'
    tags = ['teamcity']

    plugins {
        teamcityServerPlugin {
            id = 'com.github.rodm.teamcity-server'
            displayName = 'Gradle TeamCity Server plugin'
        }
        teamcityAgentPlugin {
            id = 'com.github.rodm.teamcity-agent'
            displayName = 'Gradle TeamCity Agent plugin'
        }
        teamcityCommonPlugin {
            id = 'com.github.rodm.teamcity-common'
            displayName = 'Gradle TeamCity Common API plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
    }
}
